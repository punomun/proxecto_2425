package vista.dialog;

import com.toedter.calendar.JDateChooser;
import controlador.ControladorPrincipal;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

public class DialogArtista extends javax.swing.JDialog {

    private final String metodoHttp;
    private final ControladorPrincipal controlador;

    private String imagenB64;
    private String iconoB64;

    public DialogArtista(java.awt.Frame parent, boolean modal, String metodoHttp, ControladorPrincipal controlador) {
        super(parent, modal);
        initComponents();
        this.metodoHttp = metodoHttp;
        this.controlador = controlador;
        SwingUtilities.invokeLater(() -> {
            esconderComponentes();
        });
    }

    private void esconderComponentes() {
        btnPutArtistaBorrarImagen.setVisible(false);
        btnPutArtistaBorrarIcono.setVisible(false);
        btnArtistaBuscar.setVisible(false);
        switch (metodoHttp) {
            case "GET", "DELETE" -> {
                lblArtistaId.setText(lblArtistaId.getText() + " (*)");

                lblArtistaNombre.setVisible(false);
                txtFldArtistaNombre.setVisible(false);
                lblArtistaDesc.setVisible(false);
                scrollPaneArtistaDesc.setVisible(false);
                lblArtistaFecha.setVisible(false);
                fechaArtista.setVisible(false);
                lblArtistaImg.setVisible(false);
                btnArtistaImg.setVisible(false);
                lblArtistaIco.setVisible(false);
                btnArtistaIco.setVisible(false);
            }
            case "POST" -> {
                lblArtistaNombre.setText(lblArtistaNombre.getText() + " (*)");
                lblArtistaFecha.setText(lblArtistaFecha.getText() + " (*)");

                lblArtistaId.setVisible(false);
                txtFldArtistaId.setVisible(false);
            }
            case "PUT" -> {
                lblArtistaId.setText(lblArtistaId.getText() + " (*)");
                lblArtistaNombre.setText(lblArtistaNombre.getText() + " (*)");
                lblArtistaFecha.setText(lblArtistaFecha.getText() + " (*)");
                btnArtistaBuscar.setVisible(true);
            }
        }
        btnMetodoHttp.setText(metodoHttp);
        pack();
    }

    public JDateChooser getFechaArtista() {
        return fechaArtista;
    }

    public JTextArea getTxtAreaArtistaDesc() {
        return txtAreaArtistaDesc;
    }

    public JTextField getTxtFldArtistaId() {
        return txtFldArtistaId;
    }

    public JTextField getTxtFldArtistaNombre() {
        return txtFldArtistaNombre;
    }

    public String getImagenB64() {
        return imagenB64;
    }

    public void setImagenB64(String imagenB64) {
        this.imagenB64 = imagenB64;
    }

    public String getIconoB64() {
        return iconoB64;
    }

    public void setIconoB64(String iconoB64) {
        this.iconoB64 = iconoB64;
    }

    public JButton getBtnPutArtistaBorrarIcono() {
        return btnPutArtistaBorrarIcono;
    }

    public JButton getBtnPutArtistaBorrarImagen() {
        return btnPutArtistaBorrarImagen;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lblArtistaId = new javax.swing.JLabel();
        lblArtistaNombre = new javax.swing.JLabel();
        lblArtistaDesc = new javax.swing.JLabel();
        txtFldArtistaId = new javax.swing.JTextField();
        txtFldArtistaNombre = new javax.swing.JTextField();
        scrollPaneArtistaDesc = new javax.swing.JScrollPane();
        txtAreaArtistaDesc = new javax.swing.JTextArea();
        fechaArtista = new com.toedter.calendar.JDateChooser();
        lblArtistaFecha = new javax.swing.JLabel();
        lblArtistaImg = new javax.swing.JLabel();
        lblArtistaIco = new javax.swing.JLabel();
        btnArtistaImg = new javax.swing.JButton();
        btnArtistaIco = new javax.swing.JButton();
        btnMetodoHttp = new javax.swing.JButton();
        btnArtistaBuscar = new javax.swing.JButton();
        btnPutArtistaBorrarImagen = new javax.swing.JButton();
        btnPutArtistaBorrarIcono = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestión Artista");
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lblArtistaId.setText("ID");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(lblArtistaId, gridBagConstraints);

        lblArtistaNombre.setText("Nombre");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(lblArtistaNombre, gridBagConstraints);

        lblArtistaDesc.setText("Descripción");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(lblArtistaDesc, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(txtFldArtistaId, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(txtFldArtistaNombre, gridBagConstraints);

        scrollPaneArtistaDesc.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txtAreaArtistaDesc.setColumns(20);
        txtAreaArtistaDesc.setLineWrap(true);
        txtAreaArtistaDesc.setRows(5);
        txtAreaArtistaDesc.setWrapStyleWord(true);
        scrollPaneArtistaDesc.setViewportView(txtAreaArtistaDesc);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(scrollPaneArtistaDesc, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(fechaArtista, gridBagConstraints);

        lblArtistaFecha.setText("Fecha de formación");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(lblArtistaFecha, gridBagConstraints);

        lblArtistaImg.setText("Imagen");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(lblArtistaImg, gridBagConstraints);

        lblArtistaIco.setText("Icono");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(lblArtistaIco, gridBagConstraints);

        btnArtistaImg.setText("Escoger imagen");
        btnArtistaImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArtistaImgActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnArtistaImg, gridBagConstraints);

        btnArtistaIco.setText("Escoger icono");
        btnArtistaIco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArtistaIcoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnArtistaIco, gridBagConstraints);

        btnMetodoHttp.setText("METODO");
        btnMetodoHttp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMetodoHttpActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 10, 50);
        getContentPane().add(btnMetodoHttp, gridBagConstraints);

        btnArtistaBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ic_busqueda.png"))); // NOI18N
        btnArtistaBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnArtistaBuscarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnArtistaBuscar, gridBagConstraints);

        btnPutArtistaBorrarImagen.setText("Borrar imagen");
        btnPutArtistaBorrarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPutArtistaBorrarImagenActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnPutArtistaBorrarImagen, gridBagConstraints);

        btnPutArtistaBorrarIcono.setText("Borrar icono");
        btnPutArtistaBorrarIcono.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPutArtistaBorrarIconoActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        getContentPane().add(btnPutArtistaBorrarIcono, gridBagConstraints);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnMetodoHttpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMetodoHttpActionPerformed
        switch (metodoHttp) {
            case "GET" ->
                controlador.get(this, controlador.OPCION_ARTISTA);
            case "POST" ->
                controlador.post(this, controlador.OPCION_ARTISTA);
            case "PUT" ->
                controlador.put(this, controlador.OPCION_ARTISTA);
            default ->
                controlador.delete(this, controlador.OPCION_ARTISTA);
        }
    }//GEN-LAST:event_btnMetodoHttpActionPerformed

    private void btnArtistaIcoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArtistaIcoActionPerformed
        this.iconoB64 = controlador.escogerImagen(this);
        this.btnPutArtistaBorrarIcono.setEnabled(true);
        pack();
    }//GEN-LAST:event_btnArtistaIcoActionPerformed

    private void btnArtistaImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArtistaImgActionPerformed
        this.imagenB64 = controlador.escogerImagen(this);
        this.btnPutArtistaBorrarImagen.setEnabled(true);
        pack();
    }//GEN-LAST:event_btnArtistaImgActionPerformed

    private void btnArtistaBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnArtistaBuscarActionPerformed
        controlador.buscarArtista(this);
        pack();
    }//GEN-LAST:event_btnArtistaBuscarActionPerformed

    private void btnPutArtistaBorrarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPutArtistaBorrarImagenActionPerformed
        this.imagenB64 = null;
        JOptionPane.showMessageDialog(this, "Imagen borrada");
        this.btnPutArtistaBorrarImagen.setEnabled(false);
        pack();
    }//GEN-LAST:event_btnPutArtistaBorrarImagenActionPerformed

    private void btnPutArtistaBorrarIconoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPutArtistaBorrarIconoActionPerformed
        this.iconoB64 = null;
        JOptionPane.showMessageDialog(this, "Icono borrado");
        this.btnPutArtistaBorrarIcono.setEnabled(false);
        pack();
    }//GEN-LAST:event_btnPutArtistaBorrarIconoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnArtistaBuscar;
    private javax.swing.JButton btnArtistaIco;
    private javax.swing.JButton btnArtistaImg;
    private javax.swing.JButton btnMetodoHttp;
    private javax.swing.JButton btnPutArtistaBorrarIcono;
    private javax.swing.JButton btnPutArtistaBorrarImagen;
    private com.toedter.calendar.JDateChooser fechaArtista;
    private javax.swing.JLabel lblArtistaDesc;
    private javax.swing.JLabel lblArtistaFecha;
    private javax.swing.JLabel lblArtistaIco;
    private javax.swing.JLabel lblArtistaId;
    private javax.swing.JLabel lblArtistaImg;
    private javax.swing.JLabel lblArtistaNombre;
    private javax.swing.JScrollPane scrollPaneArtistaDesc;
    private javax.swing.JTextArea txtAreaArtistaDesc;
    private javax.swing.JTextField txtFldArtistaId;
    private javax.swing.JTextField txtFldArtistaNombre;
    // End of variables declaration//GEN-END:variables

}
